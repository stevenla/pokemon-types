{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../src/App.svelte",
    "../../src/ModifierRow.svelte",
    "../../src/ModifierText.svelte",
    "../../src/ModifierList.svelte",
    "../../src/TypeIcon.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import typeDatabase from \"./types.json\";\n  import ModifierRow from \"./ModifierRow.svelte\";\n  import memoize from \"lodash/memoize\";\n  import { slide } from \"svelte/transition\";\n  import { quintIn, quintOut } from \"svelte/easing\";\n\n  const ALL_TYPES = Object.keys(typeDatabase);\n\n  let active = null;\n  function onRowClick(event) {\n    const { typeName } = event.detail;\n    if (active !== typeName) {\n      active = event.detail.typeName;\n    } else {\n      active = null;\n    }\n  }\n\n  const getModifier = memoize(\n    (from, to) => {\n      const typeInfo = typeDatabase[from];\n      for (const [modifier, typesList] of Object.entries(typeInfo.to)) {\n        if (typesList.includes(to)) {\n          return Number(modifier);\n        }\n      }\n      return 1;\n    },\n    (from, to) => from + to\n  );\n\n  function getMatches(direction, aType, bType, mod) {\n    if (direction === \"from\") {\n      return ALL_TYPES.filter(\n        name => getModifier(name, aType) * getModifier(name, bType) === mod\n      );\n    } else {\n      return ALL_TYPES.filter(\n        name => getModifier(aType, name) * getModifier(bType, name) === mod\n      );\n    }\n  }\n\n  function getDualTypes(typeName) {\n    if (typeName === null) {\n      return [];\n    }\n    const ret = Object.entries(typeDatabase).map(([otherName, otherInfo]) => {\n      const newInfo = {\n        from: {\n          \"0\": getMatches(\"from\", typeName, otherName, 0),\n          \"0.25\": getMatches(\"from\", typeName, otherName, 0.25),\n          \"0.5\": getMatches(\"from\", typeName, otherName, 0.5),\n          \"2\": getMatches(\"from\", typeName, otherName, 2),\n          \"4\": getMatches(\"from\", typeName, otherName, 4)\n        },\n        to: {}\n      };\n      return [otherName, newInfo];\n    });\n    return ret;\n  }\n\n  $: dualTypeInfo = getDualTypes(active);\n</script>\n\n<style>\n  main {\n    padding: 10px 8px;\n  }\n  div {\n    border-radius: 10px;\n    transition: background-color 0.3s ease-out;\n  }\n  .active {\n    background-color: #eee;\n  }\n  .main-active {\n    background-color: #ddd;\n  }\n</style>\n\n<main>\n  {#each Object.entries(typeDatabase) as [typeName, typeInfo]}\n    <div class:active={active === typeName}>\n      <div class:main-active={active === typeName}>\n        <ModifierRow on:click={onRowClick} {typeName} {typeInfo} />\n      </div>\n      {#if active === typeName}\n        <div in:slide={{ easing: quintIn }} out:slide={{ easing: quintOut }}>\n          {#each dualTypeInfo as [dualTypeName, dualTypeInfo]}\n            {#if dualTypeName !== typeName}\n              <ModifierRow {typeName} {dualTypeName} typeInfo={dualTypeInfo} />\n            {/if}\n          {/each}\n        </div>\n      {/if}\n    </div>\n  {/each}\n</main>\n",
    "<script>\n  export let typeName;\n  export let dualTypeName = null;\n  export let typeInfo;\n  import TypeIcon from \"./TypeIcon.svelte\";\n  import ModifierText from \"./ModifierText.svelte\";\n  import ModifierList from \"./ModifierList.svelte\";\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n</script>\n\n<style>\n  .row {\n    min-height: 80px;\n    padding: 5px 0;\n    position: relative;\n    display: flex;\n    flex-direction: row;\n  }\n  .type {\n    text-align: center;\n    align-items: center;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    font-size: 10px;\n    font-weight: bolder;\n    justify-content: center;\n    left: 50%;\n    margin-left: -24px;\n    position: absolute;\n    top: 0;\n    width: 48px;\n  }\n  .dual-icon {\n    flex-shrink: 0;\n    width: 48px;\n    height: 48px;\n    position: relative;\n  }\n  .dual-icon > div {\n    position: absolute;\n    width: 32px;\n    height: 32px;\n  }\n  .dual-icon > div:first-of-type {\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n  .dual-icon > div:last-of-type {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n  }\n</style>\n\n<div class=\"row\" on:click={() => dispatch('click', { typeName })}>\n  <div class=\"type\">\n    {#if dualTypeName}\n      <div class=\"dual-icon\">\n        <div>\n          <TypeIcon size=\"medium\" name={typeName} />\n        </div>\n        <div>\n          <TypeIcon size=\"medium\" name={dualTypeName} />\n        </div>\n      </div>\n      {typeName.toUpperCase()}\n      <br />\n      {dualTypeName.toUpperCase()}\n    {:else}\n      <TypeIcon name={typeName} />\n      {typeName.toUpperCase()}\n    {/if}\n  </div>\n\n  <ModifierList {typeInfo} direction=\"from\" />\n  <ModifierList {typeInfo} direction=\"to\" />\n</div>\n",
    "<script>\n  export let modifier = \"2\";\n\n  function getModifierDisplay(mod) {\n    switch (modifier) {\n      case \"0.5\":\n        return \"½\";\n      case \"0.25\":\n        return \"¼\";\n      default:\n        return mod;\n    }\n  }\n\n  let text = getModifierDisplay(modifier);\n</script>\n\n<style>\n  /*\n   * Color scheme from:\n   * https://coolors.co/f9dbbd-fca17d-da627d-9a348e-2e66aa\n   */\n  div {\n    margin: 0 2px;\n    font-family: monospace;\n    font-weight: bolder;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 12px;\n  }\n  .quadruple {\n    color: #8c243a;\n  }\n  .double {\n    color: #da627d;\n  }\n  .half {\n    color: #2e66aa;\n  }\n  .quarter {\n    color: #a0b9d8;\n  }\n  .none {\n    color: #fca17d;\n  }\n  span {\n    margin: 0 2px;\n  }\n</style>\n\n<div\n  class:quadruple={modifier === '4'}\n  class:double={modifier === '2'}\n  class:half={modifier === '0.5'}\n  class:quarter={modifier === '0.25'}\n  class:none={modifier === '0'}>\n  <span>-</span>\n  <span>{text}</span>\n  <span>→</span>\n</div>\n",
    "<script>\n  export let direction = \"from\";\n  export let typeInfo;\n\n  import TypeIcon from \"./TypeIcon.svelte\";\n  import ModifierText from \"./ModifierText.svelte\";\n  const sortedTypeInfo = Object.entries(typeInfo[direction]).sort((a, b) => {\n    return -1 * (Number(a[0]) - Number(b[0]));\n  });\n</script>\n\n<style>\n  .list {\n    flex: 1 1 50%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n  .from {\n    align-items: flex-end;\n    padding-right: 28px;\n  }\n  .to {\n    padding-left: 28px;\n  }\n  .modifier-list {\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    flex-shrink: 1;\n    margin-bottom: 4px;\n  }\n  .modifier-list:last-of-type {\n    margin: 0;\n  }\n  .modifier-types {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    flex: 1 1 0;\n  }\n  .from .modifier-types {\n    justify-content: flex-end;\n  }\n</style>\n\n<div\n  class=\"list\"\n  class:from={direction === 'from'}\n  class:to={direction === 'to'}>\n  {#each sortedTypeInfo as [modifier, typesList]}\n    {#if typesList.length > 0}\n      <div class=\"modifier-list\">\n        {#if direction === 'to'}\n          <ModifierText {modifier} />\n        {/if}\n        <div class=\"modifier-types\">\n          {#each typesList as modifiedType}\n            <TypeIcon name={modifiedType} size=\"small\" />\n          {/each}\n        </div>\n        {#if direction === 'from'}\n          <ModifierText {modifier} />\n        {/if}\n      </div>\n    {/if}\n  {/each}\n</div>\n",
    "<script>\n  export let name;\n  export let size = \"large\";\n</script>\n\n<style>\n  .icon {\n    display: flex;\n    width: 48px;\n    height: 48px;\n    transition: transform 0.2s ease-out, background-color 0.1s ease-out,\n      box-shadow 0.1s ease-out;\n    border-radius: 50%;\n  }\n  .medium {\n    width: 32px;\n    height: 32px;\n  }\n  .small {\n    width: 16px;\n    height: 16px;\n  }\n  img {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n\n<div\n  class=\"icon\"\n  class:medium={size === 'medium'}\n  class:small={size === 'small'}>\n  <img src={`/icons/${name}.png`} alt={name} />\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}